
import os
import glob as g

import pandas as pd

from scripts import downsample_rate


BAM_DIR = "/scratch2/wd238/ddrad/phase1/sorted_bams"
SORTED_BAMS = g.glob(BAM_DIR+"/MS*.sorted.bam")

OUT_DIR = "/scratch2/wd238/ddrad/phase1/MS_downsample_compare"

MS_INDIVIDUALS = ["MS11_0001",
            "MS11_0004",
            "MS11_0006",
            "MS11_0012",
            "MS11_0013",
            "MS11_0014",
            "MS11_0015",
            "MS11_0017",
            "MS11_0019",
            "MS11_0020",
            "MS11_0021",
            "MS11_0024",
            "MS11_0031",
            "MS11_0050",]


##### TOOLS #####
PICARD = os.environ['CONDA_ENV_PATH']+"/picard/picard.jar"


rule all:
    input:
        # output from count_mapped_reads
        expand(OUT_DIR+"/{individual}.mapped_reads", individual=MS_INDIVIDUALS),
        #
        # output from calculate_downsample_rate
        OUT_DIR+"/downsample_data/rate_table.csv",
        OUT_DIR+"/downsample_data/",
        #
        # output from downsample_with_picard
        expand(OUT_DIR+"/downsample_data/{individual}.sorted.downsampled.bam", individual=MS_INDIVIDUALS),

# rule clean:
#     shell: "rm {OUT_DIR}/MS*".format(OUT_DIR=OUT_DIR)

rule count_mapped_reads:
    input: BAM_DIR+"/{individual}.sorted.bam"

    output: OUT_DIR+"/{individual}.mapped_reads"

    shell:
        # "echo {input}"
        "samtools view -F 0X04 {input} | "
        "wc -l > {output}"


rule calculate_downsample_rate:
    input:
        wk_dir=OUT_DIR,
        read_count_files=expand(OUT_DIR+"/{individual}.mapped_reads", individual=MS_INDIVIDUALS),

    output:
        count_file=OUT_DIR+"/downsample_data/rate_table.csv",
        fig_dir=OUT_DIR+"/downsample_data/",

    run:
        downsample_rate.main(
            count_file=output.count_file,
            file_pattern=None,
            fig_dir=output.fig_dir,
            read_count_files=input.read_count_files
        )

def get_downsample_rate(table_path,indiv):
    table = pd.read_csv(table_path)
    
    return table[table["individual"] == indiv]['sample_rate']

rule downsample_with_picard:
    input:
        bam=expand(BAM_DIR+"/{individual}.sorted.bam", individual=MS_INDIVIDUALS),

    params:
        rate=lambda wildcards: get_downsample_rate(table_path=OUT_DIR+"/downsample_data/rate_table.csv", indiv=wildcards.individual)

    output: expand(OUT_DIR+"/downsample_data/{individual}.sorted.downsampled.bam", individual=MS_INDIVIDUALS)

    shell:
        "java jvm-args -jar "+PICARD+"/picard.jar DownsampleSam RANDOM_SEED=1 INPUT={input.bam} OUTPUT={output} PROBABILITY={params.rate}"
